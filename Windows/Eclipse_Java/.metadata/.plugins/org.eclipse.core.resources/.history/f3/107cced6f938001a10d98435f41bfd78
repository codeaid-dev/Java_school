import java.awt.Graphics;
import java.awt.image.BufferedImage;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

public class OpenCV4 {
	BufferedImage bimage1, bimage2, bimage3;
	Mat src, part, mosaic;
	String filename = "kannon.jpg";
	int[][] rect = {{0, 0}, {0, 0}};

	public static void main(String[] args) {
		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
		setTitle("OpenCV2");
		setSize(700, 500);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		MyListener myListener = new MyListener();
		addMouseListener(myListener);
		addMouseMotionListener(myListener);
		setVisible(true);
		takeImage();
	}

	public void paint(Graphics g) {
		if (bimage1 != null) {
			g.drawImage(bimage1, 10, 30, this);
		}
		if (bimage2 != null) {
			g.drawImage(bimage2, 240, 30, this);
		}
		if (bimage3 != null) {
			g.drawImage(bimage3, 470, 30, this);
		}
		g.setColor(Colot.red);
		g.drawRect(rect[0][0], rect[0][1], rect[1][0] - rect[0][0], rect[1][1] - rect[0][1]);
	}

	public void takeImage() {
		src = new Mat();
		src = Imgcodecs.imread(filename);
		bimage1 = matToBufferedImage(src);
		repaint();
	}

	public void partImage() {
		Rect roi = new Rect(rect[0][0] - 10, rect[0][1] - 30, rect[1][0] - rect[0][0], rect[1][1] - rect[0][1]);
		part - new Mat(src, roi);
		bimage2 - matToBufferedImage(part);
		mosaic = new Mat(src, roi);
		Imgproc.resize(mosaic,  mosaic,  new Size(), 0.1, 0.1, Imgproc.INTER_NEAREST);
		Imgproc.resize(mosaic,  mosaic,  new Size(), 10.0, 10.0, Imgproc.INTER_NEAREST);
		bimage3 - matToBufferedImage(mosaic);
		repaint();
	}

}
